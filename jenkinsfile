pipeline {
    agent { label 'user-side-vf2.o-staging' }  // Set the agent for the pipeline
    parameters {
        // Manual selection of branch during emergency
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Branch to build and deploy')
    }
    environment {
        // Define environment variables
        DEPLOY_SERVER = '13.233.129.17'  // Tomcat server IP
        DEPLOY_USER = 'ubuntu'  // User on the Tomcat server
        DEPLOY_PATH = '/var/lib/tomcat10/webapps/'  // Tomcat 10 webapps directory
        GIT_REPO = 'https://github.com/Shradha3001/test-tomcat-project.git'  // Git repository URL
    }
    stages {
        stage('Checkout Code') {
            steps {
                script {
                    // Use the branch parameter or detect the branch pushed automatically
                    def branch = params.BRANCH_NAME ? params.BRANCH_NAME : env.BRANCH_NAME
                    echo "Checking out branch: ${branch}"
                    checkout scm: [
                        $class: 'GitSCM',
                        branches: [[name: "*/${branch}"]],
                        userRemoteConfigs: [[url: GIT_REPO]]
                    ]
                }
            }
        }
        stage('Build WAR File') {
            steps {
                script {
                    echo "Building the WAR file for branch: ${params.BRANCH_NAME}"
                    sh 'mvn clean package -Dmaven.test.skip=true'
                }
            }
        }
        stage('Deploy to Tomcat') {
            steps {
                script {
                    def warFile = sh(script: "ls target/*.war", returnStdout: true).trim()
                    echo "Deploying WAR file: ${warFile}"
                    
                    // Use Jenkins' SSH credentials for SCP and SSH commands
                    sshagent(['ubuntu']) {
                        sh """
                        scp target/${warFile} ${DEPLOY_USER}@${DEPLOY_SERVER}:${DEPLOY_PATH}/
                        ssh ${DEPLOY_USER}@${DEPLOY_SERVER} 'sudo systemctl restart tomcat10'
                        """
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Deployment Successful!'
        }
        failure {
            echo 'Deployment Failed!'
        }
    }
}