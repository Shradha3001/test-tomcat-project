pipeline {
    agent { label 'user-side-vf2.o-staging' }

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Branch to build and deploy')
        booleanParam(name: 'DEPLOY', defaultValue: false, description: 'Set to true to deploy after build')
    }

    environment {
        DEPLOY_SERVER = '13.233.129.17'
        DEPLOY_USER = 'ubuntu'
        DEPLOY_PATH = '/var/lib/tomcat10/webapps/'
        GIT_REPO = 'https://github.com/Shradha3001/test-tomcat-project.git'
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    def branch = params.BRANCH_NAME ?: env.BRANCH_NAME
                    echo "Checking out branch: ${branch}"
                    checkout scm: [
                        $class: 'GitSCM',
                        branches: [[name: "*/${branch}"]],
                        userRemoteConfigs: [[url: GIT_REPO]]
                    ]
                }
            }
        }

        stage('Build WAR File') {
            steps {
                script {
                    echo "Building the WAR file for branch: ${params.BRANCH_NAME}"
                    sh 'mvn clean package -Dmaven.test.skip=true'
                }
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                script {
                    if (!params.DEPLOY) {
                        echo "❌ DEPLOY is not checked — skipping deployment."
                        return
                    }

                    def warFile = sh(script: "ls target/*.war", returnStdout: true).trim()
                    echo "✅ Deploying WAR file: ${warFile}"

                    sshagent(['ubuntu']) {
                        sh """
                        echo "Copying ${warFile} to Tomcat server"
                        scp -o StrictHostKeyChecking=no ${warFile} ${DEPLOY_USER}@${DEPLOY_SERVER}:${DEPLOY_PATH}/
                        ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} 'sudo systemctl restart tomcat10'
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}
